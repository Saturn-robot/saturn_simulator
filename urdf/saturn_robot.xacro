<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro"
 	xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
    	xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    	xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
	name="robot1_xacro">

  <xacro:property name="length_wheel" value="0.027" />
  <xacro:property name="radius_wheel" value="0.0345" />
  <xacro:property name="camera_name" value="camera" />
  <xacro:property name="frame_name" value="camera_link" />
  <xacro:macro name="default_inertial" params="mass">
               <inertial>
                       <mass value="${mass}" />
                       <inertia ixx="1.0" ixy="0.0" ixz="0.0"
                                iyy="1.0" iyz="0.0"
                                izz="1.0" />
               </inertial>
	</xacro:macro>

  <link name="base_footprint">
   		<visual>
			<geometry>
      				<box size="0.001 0.001 0.001"/>
     			</geometry>
			<origin rpy="0 0 0" xyz="0 0 0"/>
   		</visual>
 	</link>

  <!-- include gazebo setting and gazebo-plugin -->
  <xacro:include filename="robot.gazebo" />

  <gazebo reference="base_footprint">
		<material>Gazebo/Green</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 0" />
    <parent link="base_footprint" />
    <child link="base_link" />
  </joint>

  <link name="base_link">
   		<visual>
			<geometry>
      			<box size="0.144 0.113 0.003"/>
     	</geometry>
			<origin rpy="0 0 1.54" xyz="0 0 0.025"/>
			<material name="white">
				<color rgba="1 1 1 1"/>
			</material>
   		</visual>
		<collision>
			<geometry>
       				<box size="0.144 0.113 0.003"/>
			</geometry>
		</collision>
		<xacro:default_inertial mass="1"/>
 	</link>

  <link name="top_board">
   		<visual>
			<geometry>
      			<box size="0.144 0.113 0.003"/>
     	</geometry>
			<origin rpy="0 0 1.54" xyz="-0.042 0 0.073"/>
			<material name="white">
				<color rgba="1 1 1 1"/>
			</material>
   		</visual>
		<collision>
			<geometry>
       				<box size="0.144 0.113 0.003"/>
			</geometry>
		</collision>
		<xacro:default_inertial mass="1"/>
 	</link>

  <link name="wheel_left">
   		<visual>
     			<geometry>
       				<cylinder length="${length_wheel}" radius="${radius_wheel}"/>
     			</geometry>
			<!-- <origin rpy="0 1.5 0" xyz="0.1 0.1 0"/> -->
			<origin rpy="0 0 0" xyz="0 0 0"/>
   			<material name="black">
				<color rgba="0 0 0 1"/>
			</material>
		</visual>
		<collision>
			<geometry>
       				<cylinder length="${length_wheel}" radius="${radius_wheel}"/>
			</geometry>
		</collision>
		<xacro:default_inertial mass="1"/>
 	</link>

  <link name="wheel_right">
   		<visual>
     			<geometry>
       				<cylinder length="${length_wheel}" radius="${radius_wheel}"/>
     			</geometry>
			<!-- <origin rpy="0 1.5 0" xyz="-0.1 0.1 0"/> -->
			<origin rpy="0 0 0" xyz="0 0 0"/>
   			<material name="black"/>
   		</visual>
		<collision>
			<geometry>
       				<cylinder length="${length_wheel}" radius="${radius_wheel}"/>
			</geometry>
		</collision>
		<xacro:default_inertial mass="1"/>

 	</link>

  <link name="caster_wheel">
   		<visual>
     			<geometry>
       				<sphere radius="0.0125"/>
     			</geometry>
			<!-- <origin rpy="0 1.5 0" xyz="-0.1 0.1 0"/> -->
			<origin rpy="0 0 0" xyz="0 0 0"/>
   			<material name="black"/>
   		</visual>
		<collision>
			<geometry>
       				<cylinder length="${length_wheel}" radius="${radius_wheel}"/>
			</geometry>
		</collision>
		<xacro:default_inertial mass="1"/>

 	</link>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.04 0.165 0.03"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	      <box size="0.04 0.165 0.03"/>
      </geometry>
      <material name="red">
	<color rgba="1 0 0 1"/>
      </material>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="base_to_wheel_left" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left"/>
    <axis xyz="0 0 1" />
    <origin rpy="1.57 0 0" xyz="-0.085 0.11 0.0325"/>
  </joint>

  <joint name="base_to_wheel_right" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right"/>
    <axis xyz="0 0 1" />
    <origin rpy="1.57 0 0" xyz="-0.085 -0.11 0.0325"/>
 </joint>

  <joint name="base_to_caster_wheel" type="continuous">
    <parent link="base_link"/>
    <axis xyz="0 0 1" />
    <child link="caster_wheel"/>
    <origin rpy="0 0 0" xyz="0.05 0.00 0.0125"/>
  </joint>
   <!-- Camera joint -->
   <joint name="base_to_camera_link" type="fixed">
     <axis xyz="0 1 0" />
     <origin rpy="0 0 0" xyz="-0.042 0 0.165"/>
     <parent link="base_link"/>
     <child link="camera_link"/>
   </joint>

   <joint name="base_to_top_board" type="fixed">
     <axis xyz="0 1 0" />
     <origin rpy="0 0 0" xyz="-0.042 0 0.073"/>
     <parent link="base_link"/>
     <child link="top_board"/>
   </joint>

   <!-- Drive controller -->
 <gazebo>
   <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
     <alwaysOn>true</alwaysOn>
     <publishWheelTF>true</publishWheelTF>
     <publishWheelJointState>true</publishWheelJointState>
     <wheelAcceleration>0</wheelAcceleration>
     <odometrySource>1</odometrySource>
     <updateRate>100.0</updateRate>
     <robotNamespace>/</robotNamespace>
     <leftJoint>base_to_wheel_left</leftJoint>
     <rightJoint>base_to_wheel_right</rightJoint>
     <wheelSeparation>0.193</wheelSeparation>
     <wheelDiameter>0.065</wheelDiameter>
     <robotBaseFrame>base_footprint</robotBaseFrame>
     <wheelTorque>1</wheelTorque>
     <topicName>cmd_vel</topicName>
     <commandTopic>cmd_vel</commandTopic>
     <odometryTopic>odom</odometryTopic>
     <odometryFrame>odom</odometryFrame>
     <broadcastTF>true</broadcastTF>
     <publishTf>1</publishTf>
   </plugin>
  </gazebo>

  <gazebo>
  <plugin name="camera_link_controller" filename="libgazebo_ros_openni_kinect.so">
    <baseline>0.2</baseline>
    <alwaysOn>true</alwaysOn>
    <updateRate>1.0</updateRate>
    <cameraName>${camera_name}_ir</cameraName>
    <imageTopicName>/${camera_name}/depth/image_raw</imageTopicName>
    <cameraInfoTopicName>/${camera_name}/depth/camera_info</cameraInfoTopicName>
    <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
    <depthImageInfoTopicName>/${camera_name}/depth/camera_info</depthImageInfoTopicName>
    <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
    <frameName>${frame_name}</frameName>
    <pointCloudCutoff>0.5</pointCloudCutoff>
    <distortionK1>0.00000001</distortionK1>
    <distortionK2>0.00000001</distortionK2>
    <distortionK3>0.00000001</distortionK3>
    <distortionT1>0.00000001</distortionT1>
    <distortionT2>0.00000001</distortionT2>
    <CxPrime>0</CxPrime>
    <Cx>0</Cx>
    <Cy>0</Cy>
    <focalLength>0</focalLength>
    <hackBaseline>0</hackBaseline>
  </plugin>
  </gazebo>

</robot>
